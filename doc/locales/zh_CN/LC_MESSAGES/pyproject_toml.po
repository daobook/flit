# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Thomas Kluyver
# This file is distributed under the same license as the Flit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flit 3.6.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-25 13:21+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../pyproject_toml.rst:2
msgid "The pyproject.toml config file"
msgstr "pyproject.toml 配置文件"

#: ../../pyproject_toml.rst:4
msgid "This file lives next to the module or package."
msgstr "这个文件存在于模块或包的旁边。"

#: ../../pyproject_toml.rst:8
msgid ""
"Older version of Flit (up to 0.11) used a :doc:`flit.ini file <flit_ini>`"
" for similar information. These files no longer work with Flit 3 and "
"above."
msgstr ""
"旧版本的 Flit（到 0.11 为止）使用一个 :doc:`flit.ini 文件 <flit_ini>` 来提供类似的信息。"
"这些文件不再适用于 Flit 3 及以上版本。"

#: ../../pyproject_toml.rst:11
msgid ""
"Run ``python3 -m flit.tomlify`` to convert a ``flit.ini`` file to "
"``pyproject.toml``."
msgstr ""
"运行 ``python3 -m flit.tomlify``，将 ``flit.ini`` 文件转换为 ``pyproject.toml``。"

#: ../../pyproject_toml.rst:15
msgid "Build system section"
msgstr "建设系统部分"

#: ../../pyproject_toml.rst:17
msgid ""
"This tells tools like pip to build your project with flit. It's a "
"standard defined by PEP 517. For any new project using Flit, it will look"
" like this:"
msgstr ""
"这告诉像 pip 这样的工具要用 flit 来构建你的项目。"
"这是由 PEP 517 定义的一个标准。对于任何使用 Flit 的新项目，它看起来像这样："

#: ../../pyproject_toml.rst:26
msgid "Version constraints:"
msgstr "版本约束："

#: ../../pyproject_toml.rst:28
msgid ""
"For now, all packages should specify ``<4``, so they won't be impacted by"
" changes in the next major version."
msgstr ""
"目前，所有的软件包都应该指定 ``<4``，这样它们就不会受到下一个主要版本变化的影响。"

#: ../../pyproject_toml.rst:30
msgid ":ref:`pyproject_toml_project` requires ``flit_core >=3.2``"
msgstr ""

#: ../../pyproject_toml.rst:31
msgid ":ref:`pyproject_old_metadata` requires ``flit_core >=2,<4``"
msgstr ""

#: ../../pyproject_toml.rst:32
msgid "The older :doc:`flit.ini file <flit_ini>` requires ``flit_core <3``."
msgstr ""

#: ../../pyproject_toml.rst:33
msgid "TOML features new in version 1.0 require ``flit_core >=3.4``."
msgstr "TOML 在 1.0 版本中的新功能需要 ``flit_core >=3.4``。"

#: ../../pyproject_toml.rst:34
msgid ""
"``flit_core`` 3.3 is the last version supporting Python 3.4 & 3.5. "
"Packages supporting these Python versions can only use `TOML v0.5 "
"<https://toml.io/en/v0.5.0>`_."
msgstr ""
"``flit_core`` 3.3 是支持 Python 3.4 和 3.5 的最后一个版本。"
"支持这些 Python 版本的软件包只能使用 `TOML v0.5 <https://toml.io/en/v0.5.0>`_。"

#: ../../pyproject_toml.rst:37
msgid ""
"Only ``flit_core`` 2.x can build packages on Python 2, so packages still "
"supporting Python 2 cannot use new-style metadata (the ``[project]`` "
"table)."
msgstr ""

#: ../../pyproject_toml.rst:43
msgid "New style metadata"
msgstr "新风格的元数据"

#: ../../pyproject_toml.rst:47
msgid ""
"The new standard way to specify project metadata is in a ``[project]`` "
"table, as defined by :pep:`621`. Flit works for now with either this or "
"the older ``[tool.flit.metadata]`` table (:ref:`described below "
"<pyproject_old_metadata>`), but it won't allow you to mix them."
msgstr ""
"指定项目元数据的新标准方式是在 ``[project]`` 表中，如 :pep:`621` 所定义。"
"Flit 现在可以使用这个表或旧的 ``[tool.flit.metadata]`` 表（:ref:`下面描述的 <pyproject_old_metadata>`），但它不允许你把它们混合起来。"

#: ../../pyproject_toml.rst:52
msgid "A simple ``[project]`` table might look like this:"
msgstr "一个简单的 ``[project]`` 表可能看起来像这样："

#: ../../pyproject_toml.rst:68
msgid "The allowed fields are:"
msgstr "允许的字段是："

#: ../../pyproject_toml.rst:72
msgid "name"
msgstr ""

#: ../../pyproject_toml.rst:71
msgid ""
"The name your package will have on PyPI. This field is required. For "
"Flit, this also points to your package as an import name by default (see "
":ref:`pyproject_module` if that needs to be different)."
msgstr ""
"你的软件包在 PyPI 上的名称。这个字段是必须的。"
"对于 Flit 来说，这也是默认指向你的软件包的导入名称（如果需要不同的话，请看 :ref:`pyproject_module`）。"

#: ../../pyproject_toml.rst:76
msgid "version"
msgstr ""

#: ../../pyproject_toml.rst:75
msgid ""
"Version number as a string. If you want Flit to get this from a "
"``__version__`` attribute, leave it out of the TOML config and include "
"\"version\" in the ``dynamic`` field."
msgstr ""
"版本号是一个字符串。如果你想让 Flit 从 ``__version__`` 属性中得到这个数字，"
"请不要在 TOML 配置中使用它，并在 ``dynamic`` 字段中包含 \"version\"。"

#: ../../pyproject_toml.rst:80
msgid "description"
msgstr ""

#: ../../pyproject_toml.rst:79
msgid ""
"A one-line description of your project. If you want Flit to get this from"
" the module docstring, leave it out of the TOML config and include "
"\"description\" in the ``dynamic`` field."
msgstr ""
"你的项目的单行描述。如果你想让 Flit 从模块的文档串中得到这个描述，"
"请不要在 TOML 配置中加入这个描述，并在 ``dynamic`` 字段中加入 \"description\"。"

#: ../../pyproject_toml.rst:88
msgid "readme"
msgstr ""

#: ../../pyproject_toml.rst:83
msgid ""
"A path (relative to the .toml file) to a file containing a longer "
"description of your package to show on PyPI. This should be written in "
"`reStructuredText "
"<http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, Markdown"
" or plain text, and the filename should have the appropriate extension "
"(``.rst``, ``.md`` or ``.txt``). Alternatively, ``readme`` can be a table"
" with either a ``file`` key (a relative path) or a ``text`` key (literal "
"text), and an optional ``content-type`` key (e.g. ``text/x-rst``)."
msgstr ""
"一个文件的路径（相对于 .toml 文件），该文件包含对你的软件包的较长描述，以便在 PyPI 上显示。"
"这应该用 `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_、Markdown 或纯文本编写，"
"文件名应该有适当的扩展名（``.rst``、``.md`` 或 ``.txt``）。"
"另外，``readme`` 可以是一个表，有 ``file`` 键（相对路径）或 ``text`` 键（字面文本），"
"还有一个可选的 ``content-type`` 键（例如 ``text/x-rst``）。"

#: ../../pyproject_toml.rst:91 ../../pyproject_toml.rst:313
msgid "requires-python"
msgstr ""

#: ../../pyproject_toml.rst:91
msgid ""
"A version specifier for the versions of Python this requires, e.g. "
"``~=3.3`` or ``>=3.3,<4``, which are equivalents."
msgstr ""
"一个版本的指定符，表示这需要的 Python 版本，例如 ``~=3.3`` 或 ``>=3.3,<4``，它们是等效的。"

#: ../../pyproject_toml.rst:94 ../../pyproject_toml.rst:322
msgid "license"
msgstr ""

#: ../../pyproject_toml.rst:94
msgid ""
"A table with either a ``file`` key (a relative path to a license file) or"
" a ``text`` key (the license text)."
msgstr ""
"一个带有 ``file`` 键（许可证文件的相对路径）或 ``text`` 键（许可证文本）的表。"

#: ../../pyproject_toml.rst:97
msgid "authors"
msgstr ""

#: ../../pyproject_toml.rst:97
msgid ""
"A list of tables with ``name`` and ``email`` keys (both optional) "
"describing the authors of the project."
msgstr ""
"带有 ``name`` 和 ``email`` 键（都是可选的）的表格列表，描述项目的作者。"

#: ../../pyproject_toml.rst:99
msgid "maintainers"
msgstr ""

#: ../../pyproject_toml.rst:100
msgid "Same format as authors."
msgstr "格式与 authors 相同。"

#: ../../pyproject_toml.rst:101 ../../pyproject_toml.rst:318
msgid "keywords"
msgstr ""

#: ../../pyproject_toml.rst:102
msgid "A list of words to help with searching for your package."
msgstr "一个帮助搜索你的包的单词列表。"

#: ../../pyproject_toml.rst:105 ../../pyproject_toml.rst:310
msgid "classifiers"
msgstr ""

#: ../../pyproject_toml.rst:104
msgid ""
"A list of `Trove classifiers "
"<https://pypi.python.org/pypi?%3Aaction=list_classifiers>`_. Add "
"``Private :: Do Not Upload`` into the list to prevent a private package "
"from being uploaded to PyPI by accident."
msgstr ""
"`Trove classifiers <https://pypi.python.org/pypi?%3Aaction=list_classifiers>`_ 清单。"
"在列表中加入 ``Private :: Do Not Upload``，以防止私人软件包被意外地上传到 PyPI。"

#: ../../pyproject_toml.rst:107
msgid "dependencies & optional-dependencies"
msgstr ""

#: ../../pyproject_toml.rst:108
msgid "See :ref:`pyproject_project_dependencies`."
msgstr "参见 :ref:`pyproject_project_dependencies`。"

#: ../../pyproject_toml.rst:109
msgid "urls"
msgstr ""

#: ../../pyproject_toml.rst:110
msgid "See :ref:`pyproject_project_urls`."
msgstr "参见：:ref:`pyproject_project_urls`。"

#: ../../pyproject_toml.rst:111
msgid "scripts & gui-scripts"
msgstr ""

#: ../../pyproject_toml.rst:112
msgid "See :ref:`pyproject_project_scripts`."
msgstr "参见：:ref:`pyproject_project_scripts`。"

#: ../../pyproject_toml.rst:113
msgid "entry-points"
msgstr ""

#: ../../pyproject_toml.rst:114
msgid "See :ref:`pyproject_project_entrypoints`."
msgstr "参见：:ref:`pyproject_project_entrypoints`。"

#: ../../pyproject_toml.rst:117
msgid "dynamic"
msgstr ""

#: ../../pyproject_toml.rst:116
msgid ""
"A list of field names which aren't specified here, for which Flit should "
"find a value at build time. Only \"version\" and \"description\" are "
"accepted."
msgstr ""
"一个没有在这里指定的字段名的列表，Flit 应该在构建时为其找到一个值。"
"只有 \"version\" 和 \"description\" 被接受。"

#: ../../pyproject_toml.rst:122
msgid "Dependencies"
msgstr ""

#: ../../pyproject_toml.rst:124
msgid ""
"The ``dependencies`` field is a list of other packages from PyPI that "
"this package needs. Each package may be followed by a version specifier "
"like ``>=4.1``, and/or an `environment marker`_ after a semicolon. For "
"example:"
msgstr ""
"``dependencies`` 字段是这个包需要的 PyPI 的其他包的列表。"
"每个包后面都可以有一个版本说明，如 ``>=4.1``，和/或分号后的 `environment marker`_。例如："

#: ../../pyproject_toml.rst:136
msgid ""
"The ``[project.optional-dependencies]`` table contains lists of packages "
"needed for every optional feature. The requirements are specified in the "
"same format as for ``dependencies``. For example:"
msgstr ""
"``[project.optional-dependencies]`` 表包含了每个可选功能所需的软件包列表。"
"要求的指定格式与 ``dependencies`` 相同。比如说："

#: ../../pyproject_toml.rst:149
msgid ""
"You can call these optional features anything you want, although ``test``"
" and ``doc`` are common ones. You specify them for installation in square"
" brackets after the package name or directory, e.g. ``pip install "
"'.[test]'``."
msgstr ""
"你可以把这些可选功能称为任何你想要的东西，尽管 ``test`` 和 ``doc`` 是常见的功能。"
"你可以在软件包名称或目录后面的方括号中指定它们的安装，例如：``pip install '.[test]'``。"

#: ../../pyproject_toml.rst:156
msgid "URLs table"
msgstr "URL 表"

#: ../../pyproject_toml.rst:158
msgid ""
"Your project's page on `pypi.org <https://pypi.org/>`_ can show a number "
"of links. You can point people to documentation or a bug tracker, for "
"example."
msgstr ""
"你在 `pypi.org <https://pypi.org/>`_ 的项目页面可以显示一些链接。"
"例如，你可以把人们指向文档或错误跟踪器。"

#: ../../pyproject_toml.rst:161
msgid ""
"This section is called ``[project.urls]`` in the file. You can use any "
"names inside it. Here it is for flit:"
msgstr ""
"这一部分在文件中被称为 ``[project.urls]``。你可以在里面使用任何名字。这里是用于 flit 的："

#: ../../pyproject_toml.rst:173 ../../pyproject_toml.rst:374
msgid "Scripts section"
msgstr "脚本部分"

#: ../../pyproject_toml.rst:175
msgid ""
"This section is called ``[project.scripts]`` in the file. Each key and "
"value describes a shell command to be installed along with your package. "
"These work like setuptools 'entry points'. Here's the section for flit:"
msgstr ""
"这一部分在文件中被称为 ``[project.scripts]``。"
"每个键和值都描述了一个要和你的软件包一起安装的 shell 命令。"
"这些工作就像 setuptools 的 '入口点'。下面是 flit 的部分："

#: ../../pyproject_toml.rst:186
msgid ""
"This will create a ``flit`` command, which will call the function "
"``main()`` imported from :mod:`flit`."
msgstr ""
"这将创建一个 ``flit`` 命令，它将调用从 :mod:`flit` 导入的函数 ``main()``。"

#: ../../pyproject_toml.rst:189
msgid ""
"A similar table called ``[project.gui-scripts]`` defines commands which "
"launch a GUI. This only makes a difference on Windows, where GUI scripts "
"are run without a console."
msgstr ""
"一个名为 ``[project.gui-scripts]`` 的类似表格定义了启动 GUI 的命令。"
"这只在 Windows 上有区别，因为 GUI 脚本的运行没有控制台。"

#: ../../pyproject_toml.rst:196 ../../pyproject_toml.rst:381
msgid "Entry points sections"
msgstr "切入点部分"

#: ../../pyproject_toml.rst:198
msgid ""
"You can declare `entry points "
"<http://entrypoints.readthedocs.io/en/latest/>`_ using sections named "
":samp:`[project.entry-points.{groupname}]`. E.g. to provide a pygments "
"lexer from your package:"
msgstr ""
"你可以使用名为 :samp:`[project.entry-points.{groupname}]` 的部分来声明 `entry points <http://entrypoints.readthedocs.io/en/latest/>`_。"
"例如，从你的软件包中提供一个 pygments lexer："

#: ../../pyproject_toml.rst:207
msgid ""
"In each ``package:name`` value, the part before the colon should be an "
"importable module name, and the latter part should be the name of an "
"object accessible within that module. The details of what object to "
"expose depend on the application you're extending."
msgstr ""
"在每个 ``package:name`` 值中，冒号前的部分应该是一个可导入的模块名称，"
"后半部分应该是该模块中可访问的对象名称。暴露什么对象的细节取决于你要扩展的应用程序。"

#: ../../pyproject_toml.rst:212
msgid ""
"If the group name contains a dot, it must be quoted "
"(``\"pygments.lexers\"`` above). Script entry points are defined in "
":ref:`scripts tables <pyproject_project_scripts>`, so you can't use the "
"group names ``console_scripts`` or ``gui_scripts`` here."
msgstr ""
"如果组名包含一个点，必须加引号（``\"pygments.lexers\"`` 上面）。"
"脚本入口是在 :ref:`scripts tables <pyproject_project_scripts>` 中定义的，"
"所以你不能在这里使用组名 ``console_scripts`` 或 ``gui_scripts``。"

#: ../../pyproject_toml.rst:220
msgid "Module section"
msgstr "模块部分"

#: ../../pyproject_toml.rst:222
msgid ""
"If your package will have different names for installation and import, "
"you should specify the install (PyPI) name in the ``[project]`` table "
"(:ref:`see above <pyproject_toml_project>`), and the import name in a "
"``[tool.flit.module]`` table:"
msgstr ""
"如果你的软件包将有不同的安装和导入名称，"
"你应该在 ``[project]`` 表中指定安装（PyPI）名称（:ref:`见上文 <pyproject_toml_project>`），"
"并在 ``[tool.flit.module]`` 表中指定导入名称："

#: ../../pyproject_toml.rst:239
msgid "Old style metadata"
msgstr ""

#: ../../pyproject_toml.rst:241
msgid ""
"Flit's older way to specify metadata is in a ``[tool.flit.metadata]`` "
"table, along with ``[tool.flit.scripts]`` and "
"``[tool.flit.entrypoints]``, described below. This is still recognised "
"for now, but you can't mix it with :ref:`pyproject_toml_project`."
msgstr ""

#: ../../pyproject_toml.rst:246
msgid "There are three required fields:"
msgstr ""

#: ../../pyproject_toml.rst:248
msgid "module"
msgstr ""

#: ../../pyproject_toml.rst:249
msgid "The name of the module/package, as you'd use in an import statement."
msgstr ""

#: ../../pyproject_toml.rst:250
msgid "author"
msgstr ""

#: ../../pyproject_toml.rst:251
msgid "Your name"
msgstr ""

#: ../../pyproject_toml.rst:253
msgid "author-email"
msgstr ""

#: ../../pyproject_toml.rst:253
msgid "Your email address"
msgstr ""

#: ../../pyproject_toml.rst:255
msgid "e.g. for flit itself"
msgstr ""

#: ../../pyproject_toml.rst:266
msgid "``home-page`` was previously required."
msgstr ""

#: ../../pyproject_toml.rst:268
msgid "The remaining fields are optional:"
msgstr ""

#: ../../pyproject_toml.rst:270
msgid "home-page"
msgstr ""

#: ../../pyproject_toml.rst:271
msgid "A URL for the project, such as its Github repository."
msgstr ""

#: ../../pyproject_toml.rst:283
msgid "requires"
msgstr ""

#: ../../pyproject_toml.rst:273
msgid ""
"A list of other packages from PyPI that this package needs. Each package "
"may be followed by a version specifier like ``(>=4.1)`` or ``>=4.1``, "
"and/or an `environment marker`_ after a semicolon. For example:"
msgstr ""

#: ../../pyproject_toml.rst:300
msgid "requires-extra"
msgstr ""

#: ../../pyproject_toml.rst:286
msgid ""
"Lists of packages needed for every optional feature. The requirements are"
" specified in the same format as for ``requires``. The requirements of "
"the two reserved extras ``test`` and ``doc`` as well as the extra ``dev``"
" are installed by ``flit install``. For example:"
msgstr ""

#: ../../pyproject_toml.rst:306
msgid "description-file"
msgstr ""

#: ../../pyproject_toml.rst:303
msgid ""
"A path (relative to the .toml file) to a file containing a longer "
"description of your package to show on PyPI. This should be written in "
"`reStructuredText "
"<http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_, Markdown"
" or plain text, and the filename should have the appropriate extension "
"(``.rst``, ``.md`` or ``.txt``)."
msgstr ""

#: ../../pyproject_toml.rst:309
msgid ""
"A list of `Trove classifiers "
"<https://pypi.python.org/pypi?%3Aaction=list_classifiers>`_. Add "
"``Private :: Do Not Upload`` into the list to prevent a private package "
"from uploading on PyPI by accident."
msgstr ""

#: ../../pyproject_toml.rst:313
msgid ""
"A version specifier for the versions of Python this requires, e.g. "
"``~=3.3`` or ``>=3.3,<4`` which are equivalents."
msgstr ""

#: ../../pyproject_toml.rst:316
msgid "dist-name"
msgstr ""

#: ../../pyproject_toml.rst:316
msgid ""
"If you want your package's name on PyPI to be different from the "
"importable module name, set this to the PyPI name."
msgstr ""

#: ../../pyproject_toml.rst:319
msgid "Comma separated list of words to help with searching for your package."
msgstr ""

#: ../../pyproject_toml.rst:321
msgid ""
"The name of a license, if you're using one for which there isn't a Trove "
"classifier. It's recommended to use Trove classifiers instead of this in "
"most cases."
msgstr ""

#: ../../pyproject_toml.rst:325
msgid "maintainer, maintainer-email"
msgstr ""

#: ../../pyproject_toml.rst:325
msgid "Like author, for if you've taken over a project from someone else."
msgstr ""

#: ../../pyproject_toml.rst:327
msgid "Here was the metadata section from flit using the older style:"
msgstr ""

#: ../../pyproject_toml.rst:355
msgid "URLs subsection"
msgstr ""

#: ../../pyproject_toml.rst:357
msgid ""
"Your project's page on `pypi.org <https://pypi.org/>`_ can show a number "
"of links, in addition to the ``home-page`` URL described above. You can "
"point people to documentation or a bug tracker, for example."
msgstr ""

#: ../../pyproject_toml.rst:361
msgid ""
"This section is called ``[tool.flit.metadata.urls]`` in the file. You can"
" use any names inside it. Here it is for flit:"
msgstr ""

#: ../../pyproject_toml.rst:376
msgid ""
"A ``[tool.flit.scripts]`` table can be used along with "
"``[tool.flit.metadata]``. It is in the same format as the newer "
"``[project.scripts]`` table :ref:`described above "
"<pyproject_project_scripts>`."
msgstr ""

#: ../../pyproject_toml.rst:383
msgid ""
"``[tool.flit.entrypoints]`` tables can be used along with "
"``[tool.flit.metadata]``. They are in the same format as the newer "
"``[project.entry-points]`` tables :ref:`described above "
"<pyproject_project_entrypoints>`."
msgstr ""

#: ../../pyproject_toml.rst:390
msgid "Sdist section"
msgstr "Sdist 部分"

#: ../../pyproject_toml.rst:394
msgid ""
"When you use :ref:`build_cmd` or :ref:`publish_cmd`, Flit builds an sdist"
" (source distribution) tarball containing the files that are checked into"
" version control (git or mercurial). If you want more control, or it "
"doesn't recognise your version control system, you can give lists of "
"paths or glob patterns as ``include`` and ``exclude`` in this section. "
"For example:"
msgstr ""
"当你使用 :ref:`build_cmd` 或 :ref:`publish_cmd` 时，Flit 会建立一个 sdist（源码分布）tarball，"
"其中包含被检查到版本控制（git 或 mercurial）的文件。如果你想要更多的控制，或者它不能识别你的版本控制系统，"
"你可以在这部分给出路径列表或 glob 模式作为 ``include`` 和 ``exclude``。例如："

#: ../../pyproject_toml.rst:406
msgid "These paths:"
msgstr "这些路径："

#: ../../pyproject_toml.rst:408
msgid "Always use ``/`` as a separator (POSIX style)"
msgstr "始终使用 ``/`` 作为分隔符（POSIX 风格）"

#: ../../pyproject_toml.rst:409
msgid "Must be relative paths from the directory containing ``pyproject.toml``"
msgstr "必须是包含 ``pyproject.toml`` 的目录的相对路径。"

#: ../../pyproject_toml.rst:410
msgid "Cannot go outside that directory (no ``../`` paths)"
msgstr "不能进入该目录之外（没有 ``../`` 的路径）。"

#: ../../pyproject_toml.rst:411
msgid "Cannot contain control characters or ``<>:\"\\\\``"
msgstr "不能包含控制字符或 ``<>:\"\\\\``"

#: ../../pyproject_toml.rst:412
msgid "Cannot use recursive glob patterns (``**/``)"
msgstr "不能使用递归 glob 模式（``**/``）"

#: ../../pyproject_toml.rst:413
msgid ""
"Can refer to directories, in which case they include everything under the"
" directory, including subdirectories"
msgstr ""
"可以指代目录，在这种情况下，它们包括该目录下的一切，包括子目录"

#: ../../pyproject_toml.rst:415
msgid ""
"Should match the case of the files they refer to, as case-insensitive "
"matching is platform dependent"
msgstr ""
"应该与它们所指的文件的大小写相匹配，因为不区分大小写的匹配是依赖于平台的"

#: ../../pyproject_toml.rst:418
msgid "Exclusions have priority over inclusions."
msgstr "不适用的情况比适用的情况优先。"

#: ../../pyproject_toml.rst:422
msgid ""
"If you are not using :ref:`build_cmd` but  ``flit_core`` via another "
"build frontend, Flit doesn't doesn't check the VCS for files to include "
"but instead builds a 'minimal' sdist (which includes the files necessary "
"to build a wheel). You'll have to adapt your inclusion/exclusion rules to"
" achieve the same result as you'd get with :ref:`build_cmd`."
msgstr ""
"如果你没有使用 :ref:`build_cmd`，而是通过其他构建前端使用 ``flit_core``，"
"Flit 不会检查 VCS 中的文件，而是构建一个 '最小' 的 sdist（其中包括构建轮子所需的文件）。"
"你必须调整你的包含/排除规则，以达到与你用 :ref:`build_cmd` 得到的相同结果。"
